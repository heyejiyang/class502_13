CREATE OR REPLACE PROCEDURE PRO_NOPARAM
IS 
	V_DEPTNO DEPT.DEPTNO%TYPE;
	V_DNAME DEPT.DNAME%TYPE;
BEGIN 
	SELECT DEPTNO, DNAME INTO V_DEPTNO, V_DNAME
	--DEPTNO, DNAME를 조회해 후 복사해서 INTO뒤 변수에 넣기
	FROM DEPT WHERE DEPTNO = 30;
	
	DBMS_OUTPUT.PUT_LINE('DEPTNO: '||V_DEPTNO);
	DBMS_OUTPUT.PUT_LINE('DNAME: '|| V_DNAME);
END PRO_NOPARAM;

---
SELECT * FROM USER_ERRORS;
--

CALL PRO_NOPARAM();

---
BEGIN
	PRO_NOPARAM();
END;


---

CREATE OR REPLACE PROCEDURE PRO_PARAM_IN(
	P_DEPTNO IN NUMBER,
	P_JOB IN VARCHAR2 -- IN생략 가능
	--두개의 매개변수 존재
)
IS
BEGIN 
	FOR d IN (SELECT * FROM EMP
			WHERE DEPTNO = P_DEPTNO AND JOB = P_JOB)
	LOOP
		DBMS_OUTPUT.PUT_LINE('EMPNO: '|| d.EMPNO);
		DBMS_OUTPUT.PUT_LINE('ENAME: '|| d.ENAME);
		DBMS_OUTPUT.PUT_LINE('JOB: '|| d.JOB);
		DBMS_OUTPUT.PUT_LINE('------------------');
	END LOOP;
	
END PRO_PARAM_IN; --프로시저명 꼭 같이 입력해줘야함


SELECT * FROM USER_ERRORS;

CALL PRO_PARAM_IN(20,'CLERK');


----

CREATE OR REPLACE PROCEDURE PRO_PARAM_OUT(
	P_DEPTNO EMP.DEPTNO%TYPE,
	O_SUM OUT NUMBER, -- OUT생략 불가
	O_AVG OUT NUMBER
)
IS
BEGIN 
	SELECT SUM(SAL), ROUND(AVG(SAL),2) INTO O_SUM, O_AVG
	FROM EMP WHERE DEPTNO = P_DEPTNO;
	
END PRO_PARAM_OUT; --프로시저명 꼭 같이 입력해줘야함


SELECT * FROM USER_ERRORS;
---

DECLARE
	V_SUM NUMBER;
	V_AVG NUMBER;
BEGIN
	PRO_PARAM_OUT(20,V_SUM,V_AVG);
	DBMS_OUTPUT.PUT_LINE('SUM: ' || V_SUM);
	DBMS_OUTPUT.PUT_LINE('AVG: ' || V_AVG);
END;
---
CREATE OR REPLACE PROCEDURE PRO_PARAM_INOUT(
	P_NUM IN OUT NUMBER 
) --이용도 하고 내보낼 수도 있다.
IS
BEGIN 
	P_NUM := P_NUM * P_NUM;
	
END PRO_PARAM_INOUT;




DECLARE
	V_NUM NUMBER := 10;
BEGIN
	PRO_PARAM_INOUT(V_NUM);
	PRO_PARAM_INOUT(V_NUM);
	PRO_PARAM_INOUT(V_NUM);
	DBMS_OUTPUT.PUT_LINE('V_NUM: '|| V_NUM);
END;
